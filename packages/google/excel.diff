diff --git a/packages/main/src/RPA/Excel/Files.py b/packages/main/src/RPA/Excel/Files.py
index 8bc06278..181c41d5 100644
--- a/packages/main/src/RPA/Excel/Files.py
+++ b/packages/main/src/RPA/Excel/Files.py
@@ -198,12 +198,11 @@ class Files:
             "verify that the path and extension are correct"
         )
 
-    def create_workbook(self, path=None, fmt="xlsx"):
+    def create_workbook(self, fmt="xlsx"):
         """Create and open a new Excel workbook.
 
         Automatically also creates a new worksheet with the name "Sheet".
 
-        :param path: Default save path for workbook
         :param fmt:  Format of workbook, i.e. xlsx or xls
         """
         if self.workbook:
@@ -211,9 +210,9 @@ class Files:
 
         fmt = str(fmt).lower().strip()
         if fmt == "xlsx":
-            self.workbook = XlsxWorkbook(path)
+            self.workbook = XlsxWorkbook()
         elif fmt == "xls":
-            self.workbook = XlsWorkbook(path)
+            self.workbook = XlsWorkbook()
         else:
             raise ValueError(f"Unknown format: {fmt}")
 
@@ -413,9 +412,8 @@ class Files:
 class XlsxWorkbook:
     """Container for manipulating moden Excel files (.xlsx)"""
 
-    def __init__(self, path=None):
+    def __init__(self):
         self.logger = logging.getLogger(__name__)
-        self.path = path
         self._book = None
         self._extension = None
         self._active = None
@@ -500,7 +498,6 @@ class XlsxWorkbook:
         self._active = None
 
     def save(self, path=None):
-        path = path or self.path
         if not path:
             raise ValueError("No path defined for workbook")
 
@@ -621,9 +618,8 @@ class XlsxWorkbook:
 class XlsWorkbook:
     """Container for manipulating legacy Excel files (.xls)"""
 
-    def __init__(self, path=None):
+    def __init__(self):
         self.logger = logging.getLogger(__name__)
-        self.path = path
         self._book = None
         self._extension = None
         self._active = None
@@ -741,7 +737,6 @@ class XlsWorkbook:
             fd.close()
 
     def save(self, path=None):
-        path = path or self.path
         if not path:
             raise ValueError("No path defined for workbook")
 
